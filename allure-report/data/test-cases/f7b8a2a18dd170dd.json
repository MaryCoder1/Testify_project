{"uid":"f7b8a2a18dd170dd","name":"Add a deal forbidden user","fullName":"Testify_project/Deal/Add a deal#Add a deal forbidden user","historyId":"dd9e9f95ab12e540cfb621d4807f88d7:60a29a5e4e3adcef05b2a281c7a51861","time":{"start":1740213467398,"stop":1740213467684,"duration":286},"description":"Adds a new deal. All deals created through the Pipedrive API will have a `origin` set to `API`. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the dealFields and look for `key` values. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/creating-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\">adding a deal</a>.","descriptionHtml":"Adds a new deal. All deals created through the Pipedrive API will have a `origin` set to `API`. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the dealFields and look for `key` values. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/creating-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\">adding a deal</a>.","status":"failed","statusMessage":"valid responseBody, valid response structures, Status code is 403","statusTrace":"Response code: 400, status: Bad Request","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"Adds a new deal. All deals created through the Pipedrive API will have a `origin` set to `API`. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the dealFields and look for `key` values. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/creating-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\">adding a deal</a>.","descriptionHtml":"Adds a new deal. All deals created through the Pipedrive API will have a `origin` set to `API`. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the dealFields and look for `key` values. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/creating-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\">adding a deal</a>.","status":"failed","statusMessage":"valid responseBody, valid response structures, Status code is 403","statusTrace":"Response code: 400, status: Bad Request","steps":[{"name":"Content-Type is not missing","time":{"start":1740213467664,"stop":1740213467664,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"Response time is less than 3000ms","time":{"start":1740213467665,"stop":1740213467665,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"valid responseBody","time":{"start":1740213467673,"stop":1740213467673,"duration":0},"status":"failed","statusMessage":"expected undefined to be a boolean","statusTrace":"AssertionError: expected undefined to be a boolean\n   at Object.eval sandbox-script.js:1:80)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"valid response structures","time":{"start":1740213467674,"stop":1740213467674,"duration":0},"status":"failed","statusMessage":"expected undefined to be false","statusTrace":"AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:2:80)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"Status code is 403","time":{"start":1740213467676,"stop":1740213467676,"duration":0},"status":"failed","statusMessage":"expected response to have status code 403 but got 400","statusTrace":"AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:3:80)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0,"attachmentStep":false}],"attachments":[{"uid":"88fdd0b5a834521f","name":"TestScript","source":"88fdd0b5a834521f.txt","type":"text/plain","size":412},{"uid":"1be5b0635cfc72f5","name":"Request Headers","source":"1be5b0635cfc72f5.json","type":"application/json","size":526},{"uid":"10ae5c560f6fb49a","name":"Request Body","source":"10ae5c560f6fb49a.txt","type":"text/plain","size":445},{"uid":"a97b62f4418a7a69","name":"Response Headers","source":"a97b62f4418a7a69.json","type":"application/json","size":995},{"uid":"33c465e50d7d40c","name":"Response Body","source":"33c465e50d7d40c.txt","type":"text/plain","size":52}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":5,"hasContent":true,"stepsCount":5,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"SFT-MARY-AFOLAYAN"},{"name":"thread","value":"pid-10876-worker-main"},{"name":"parentSuite","value":"Testify_project"},{"name":"suite","value":"Deal"},{"name":"subSuite","value":"Add a deal"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://api.pipedrive.com/v1/deals?api_token=41fb60126055dd9be8a3b11e01786c2453e8b66f"},{"name":"Response Code","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f7b8a2a18dd170dd.json","parameterValues":["POST - https://api.pipedrive.com/v1/deals?api_token=41fb60126055dd9be8a3b11e01786c2453e8b66f","400"]}