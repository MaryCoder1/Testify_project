{"uuid":"73f15531-ecab-408a-a910-d0727436d137","name":"Add a person - invalid user Copy","historyId":"1ab3e42bdb95acc2a7179884f94a099c:378aaab074d6a15b219ab8e531a0e908","status":"failed","statusDetails":{"message":"Bad request!, person ID should not be present","trace":"Response code: 400, status: Bad Request"},"stage":"finished","steps":[{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1740213454880,"name":"Content-Type is not missing","stop":1740213454880},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1740213454881,"name":"Response time is less than 3000ms","stop":1740213454881},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1740213454890,"name":"validate response body and structure","stop":1740213454890},{"status":"failed","statusDetails":{"message":"expected 400 to equal 403","trace":"AssertionError: expected 400 to equal 403\n   at Object.eval sandbox-script.js:2:41)"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1740213454891,"name":"Bad request!","stop":1740213454891},{"status":"failed","statusDetails":{"message":"Target cannot be null or undefined.","trace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:3:41)"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1740213454892,"name":"person ID should not be present","stop":1740213454892}],"attachments":[{"name":"TestScript","source":"fff8cfef-8d4a-4661-b532-72295637b1f5-attachment.txt","type":"text/plain"},{"name":"Request Headers","source":"5e35a8db-1967-450f-89df-0674ea379b6f-attachment.json","type":"application/json"},{"name":"Request Body","source":"3ead2adb-fe9b-4198-a232-b8f538733cf6-attachment.txt","type":"text/plain"},{"name":"Response Headers","source":"0062472c-4e4f-4cf2-bb67-a528ba1567ba-attachment.json","type":"application/json"},{"name":"Response Body","source":"2501560a-d5f0-493a-aec6-7967a77e09c5-attachment.txt","type":"text/plain"}],"parameters":[{"name":"Request","value":"POST - https://api.pipedrive.com/v1/persons?api_token=41fb60126055dd9be8a3b11e01786c2453e8b66f"},{"name":"Response Code","value":"400","excluded":true}],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"SFT-MARY-AFOLAYAN"},{"name":"thread","value":"pid-10876-worker-main"},{"name":"parentSuite","value":"Testify_project"},{"name":"suite","value":"Persons"},{"name":"subSuite","value":"Add person"}],"links":[],"start":1740213454614,"fullName":"Testify_project/Persons/Add person#Add a person - invalid user Copy","description":"Adds a new person. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the personFields and look for `key` values.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also accept and return the `data.marketing_status` field.","descriptionHtml":"Adds a new person. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the personFields and look for `key` values.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also accept and return the `data.marketing_status` field.","testCaseId":"1ab3e42bdb95acc2a7179884f94a099c","stop":1740213454899}